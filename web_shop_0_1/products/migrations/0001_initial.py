# Generated by Django 4.1.3 on 2022-11-30 21:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.MinLengthValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.MinLengthValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Name')),
                ('brand', models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Brand')),
                ('item_image', models.ImageField(blank=True, null=True, upload_to='products', verbose_name='Image')),
                ('price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('color', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Color')),
                ('quantity', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity (litters)')),
                ('length', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Length (mm)')),
                ('width', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Width (mm)')),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Height (mm)')),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Weight (kg)')),
                ('diameter', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Diameter (mm)')),
                ('product_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.productclass', verbose_name='Product Class')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.producttype', verbose_name='Product Type')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
